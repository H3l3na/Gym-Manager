// <auto-generated />
using System;
using GymManager3.WebAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymManager3.WebAPI.Migrations
{
    [DbContext(typeof(GymManager1Context))]
    [Migration("20200915194857_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GymManager3.WebAPI.Database.Administracija", b =>
                {
                    b.Property<int>("AdministracijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AdministracijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DatumZaposlenja")
                        .HasColumnType("date");

                    b.Property<int?>("GradId")
                        .HasColumnName("GradID");

                    b.Property<string>("Ime");

                    b.Property<string>("Jmbg")
                        .HasColumnName("JMBG")
                        .HasMaxLength(13);

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("LozinkaHash");

                    b.Property<string>("LozinkaSalt");

                    b.Property<string>("Mail")
                        .HasMaxLength(100);

                    b.Property<string>("Prezime");

                    b.Property<byte[]>("Slika");

                    b.Property<string>("Spol");

                    b.Property<bool?>("StalanZaposlenik");

                    b.Property<int?>("Staz");

                    b.Property<string>("Telefon")
                        .HasMaxLength(12);

                    b.Property<string>("Uloga");

                    b.HasKey("AdministracijaId");

                    b.HasIndex("GradId");

                    b.HasIndex("Mail")
                        .IsUnique()
                        .HasName("UQ__Administ__2724B2D1E46225C0")
                        .HasFilter("[Mail] IS NOT NULL");

                    b.ToTable("Administracija");

                    b.HasData(
                        new
                        {
                            AdministracijaId = 1,
                            Adresa = "Dzemala Bijedica 100",
                            DatumRodjenja = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZaposlenja = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradId = 2,
                            Ime = "Admin",
                            Jmbg = "1002003004001",
                            KorisnickoIme = "admin",
                            LozinkaHash = "LvCr58p6/ZB3Oaz7lygL5SybYts=",
                            LozinkaSalt = "uiYGY+Qpm2yTIhvujwlV/g==",
                            Mail = "admin@gmail.com",
                            Prezime = "Admin",
                            Spol = "M",
                            Staz = 1,
                            Telefon = "061834223",
                            Uloga = "Administrator"
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.Property<int?>("PostanskiBr");

                    b.Property<string>("Skracenica");

                    b.HasKey("GradId");

                    b.ToTable("Grad");

                    b.HasData(
                        new
                        {
                            GradId = 1,
                            Naziv = "Gračanica",
                            PostanskiBr = 75320,
                            Skracenica = "Gr"
                        },
                        new
                        {
                            GradId = 2,
                            Naziv = "Sarajevo",
                            PostanskiBr = 71000,
                            Skracenica = "SA"
                        },
                        new
                        {
                            GradId = 3,
                            Naziv = "Mostar",
                            PostanskiBr = 88000,
                            Skracenica = "MO"
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikUlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdministracijaID")
                        .HasColumnName("AdministracijaID");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int?>("PolaznikID")
                        .HasColumnName("PolaznikID");

                    b.Property<int?>("TrenerID")
                        .HasColumnName("TrenerID");

                    b.Property<int?>("UlogaID")
                        .HasColumnName("UlogaID");

                    b.HasKey("KorisnikUlogaID");

                    b.HasIndex("AdministracijaID");

                    b.HasIndex("PolaznikID");

                    b.HasIndex("TrenerID");

                    b.HasIndex("UlogaID");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjeneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OcjeneID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ocjena")
                        .HasColumnName("Ocjena");

                    b.Property<int>("PolaznikID")
                        .HasColumnName("PolaznikID");

                    b.Property<int>("TrenerID")
                        .HasColumnName("TrenerID");

                    b.HasKey("OcjeneID");

                    b.HasIndex("PolaznikID");

                    b.HasIndex("TrenerID");

                    b.ToTable("Ocjene");

                    b.HasData(
                        new
                        {
                            OcjeneID = 1,
                            Ocjena = 10,
                            PolaznikID = 1,
                            TrenerID = 1
                        },
                        new
                        {
                            OcjeneID = 2,
                            Ocjena = 10,
                            PolaznikID = 1,
                            TrenerID = 2
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Pohadja", b =>
                {
                    b.Property<int>("PohadjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PohadjaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Odrzano");

                    b.Property<string>("Opis");

                    b.Property<int?>("PolaznikId")
                        .HasColumnName("PolaznikID");

                    b.Property<int?>("TerminId")
                        .HasColumnName("TerminID");

                    b.Property<int?>("TreningId")
                        .HasColumnName("TreningID");

                    b.HasKey("PohadjaId");

                    b.HasIndex("PolaznikId");

                    b.HasIndex("TerminId");

                    b.HasIndex("TreningId");

                    b.ToTable("Pohadja");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Polaznik", b =>
                {
                    b.Property<int>("PolaznikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PolaznikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<int?>("GradId")
                        .HasColumnName("GradID");

                    b.Property<string>("Ime");

                    b.Property<string>("JMBG")
                        .HasColumnName("JMBG")
                        .HasMaxLength(13);

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("LozinkaHash");

                    b.Property<string>("LozinkaSalt");

                    b.Property<string>("Mail")
                        .HasMaxLength(100);

                    b.Property<string>("Prezime");

                    b.Property<string>("Spol");

                    b.Property<string>("Telefon")
                        .HasMaxLength(12);

                    b.Property<string>("Uloga");

                    b.HasKey("PolaznikId");

                    b.HasIndex("GradId");

                    b.HasIndex("Mail")
                        .IsUnique()
                        .HasName("UQ__Polaznik__2724B2D12A306324")
                        .HasFilter("[Mail] IS NOT NULL");

                    b.ToTable("Polaznik");

                    b.HasData(
                        new
                        {
                            PolaznikId = 1,
                            Adresa = "Olovska 103A",
                            DatumRodjenja = new DateTime(2020, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradId = 2,
                            Ime = "Alma",
                            JMBG = "2504996127155",
                            KorisnickoIme = "alma123",
                            LozinkaHash = "bhHfxO25pXvENGAFZPNpLUPhKLk=",
                            LozinkaSalt = "XkhJjWKutng9gwGqnM5HWg==",
                            Mail = "alma@gmail.com",
                            Prezime = "Djedovic",
                            Spol = "Ž",
                            Telefon = "062365144",
                            Uloga = "Polaznik"
                        },
                        new
                        {
                            PolaznikId = 2,
                            Adresa = "Olovska 103B",
                            DatumRodjenja = new DateTime(2020, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradId = 2,
                            Ime = "Amela",
                            JMBG = "2009996127155",
                            KorisnickoIme = "amela123",
                            LozinkaHash = "kaZyh4G4+pbffB7BcFpwrmTC7Fc=",
                            LozinkaSalt = "p02YvvPpqDzctCrIlXFn0Q==",
                            Mail = "amela@gmail.com",
                            Prezime = "Cosic",
                            Spol = "Ž",
                            Telefon = "062341184",
                            Uloga = "Polaznik"
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.RezervacijaTrenera", b =>
                {
                    b.Property<int>("RezervacijaTreneraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaTreneraID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PolaznikID")
                        .HasColumnName("PolaznikID");

                    b.Property<int?>("SlobodniTerminiID")
                        .HasColumnName("SlobodniTerminiID");

                    b.Property<int?>("TrenerID")
                        .HasColumnName("TrenerID");

                    b.HasKey("RezervacijaTreneraID");

                    b.HasIndex("PolaznikID");

                    b.HasIndex("TrenerID");

                    b.ToTable("RezervacijaTrenera");

                    b.HasData(
                        new
                        {
                            RezervacijaTreneraID = 1,
                            PolaznikID = 1,
                            SlobodniTerminiID = 1,
                            TrenerID = 1
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.RezervacijaTreninga", b =>
                {
                    b.Property<int>("RezervacijaTreningaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaTreningaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumVrijeme")
                        .HasColumnType("datetime");

                    b.Property<int?>("PolaznikID")
                        .HasColumnName("PolaznikID");

                    b.Property<int?>("TreningID")
                        .HasColumnName("TreningID");

                    b.HasKey("RezervacijaTreningaID");

                    b.HasIndex("PolaznikID");

                    b.HasIndex("TreningID");

                    b.ToTable("RezervacijaTreninga");

                    b.HasData(
                        new
                        {
                            RezervacijaTreningaID = 1,
                            DatumVrijeme = new DateTime(2020, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PolaznikID = 1,
                            TreningID = 1
                        },
                        new
                        {
                            RezervacijaTreningaID = 2,
                            DatumVrijeme = new DateTime(2020, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PolaznikID = 1,
                            TreningID = 2
                        },
                        new
                        {
                            RezervacijaTreningaID = 3,
                            DatumVrijeme = new DateTime(2020, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PolaznikID = 2,
                            TreningID = 3
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.SlobodniTermini", b =>
                {
                    b.Property<int>("SlobodniTerminiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SlobodniTerminiID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Termin")
                        .HasColumnType("datetime");

                    b.HasKey("SlobodniTerminiID");

                    b.ToTable("SlobodniTermini");

                    b.HasData(
                        new
                        {
                            SlobodniTerminiID = 1,
                            Termin = new DateTime(2020, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SlobodniTerminiID = 2,
                            Termin = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SlobodniTerminiID = 3,
                            Termin = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SlobodniTerminiID = 4,
                            Termin = new DateTime(2020, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SlobodniTerminiID = 5,
                            Termin = new DateTime(2020, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Subskripcija", b =>
                {
                    b.Property<int>("SubskripcijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubskripcijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Opis");

                    b.Property<bool?>("Otkazano");

                    b.Property<string>("Trajanje");

                    b.Property<int?>("TreningId")
                        .HasColumnName("TreningID");

                    b.Property<string>("Vrsta");

                    b.Property<int?>("VrstaSubskripcijeId")
                        .HasColumnName("VrstaSubskripcijeID");

                    b.HasKey("SubskripcijaId");

                    b.HasIndex("TreningId");

                    b.HasIndex("VrstaSubskripcijeId");

                    b.ToTable("Subskripcija");

                    b.HasData(
                        new
                        {
                            SubskripcijaId = 1,
                            Opis = "Subscription",
                            Trajanje = "30",
                            TreningId = 1,
                            Vrsta = "Mjesecna",
                            VrstaSubskripcijeId = 1
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TerminID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MaxBrPolaznika")
                        .HasColumnType("int");

                    b.Property<string>("Sala");

                    b.Property<DateTime?>("TerminOdrzavanja")
                        .HasColumnType("datetime");

                    b.Property<int?>("TrenerId")
                        .HasColumnName("TrenerID");

                    b.Property<int?>("TreningId")
                        .HasColumnName("TreningID");

                    b.HasKey("TerminId");

                    b.HasIndex("TrenerId");

                    b.HasIndex("TreningId");

                    b.ToTable("Termin");

                    b.HasData(
                        new
                        {
                            TerminId = 1,
                            MaxBrPolaznika = 30,
                            Sala = "Sala 1",
                            TerminOdrzavanja = new DateTime(2020, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 1,
                            TreningId = 1
                        },
                        new
                        {
                            TerminId = 2,
                            MaxBrPolaznika = 15,
                            Sala = "Sala 2",
                            TerminOdrzavanja = new DateTime(2020, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 2,
                            TreningId = 2
                        },
                        new
                        {
                            TerminId = 3,
                            MaxBrPolaznika = 20,
                            Sala = "Sala 3",
                            TerminOdrzavanja = new DateTime(2020, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrenerId = 3,
                            TreningId = 3
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Trener", b =>
                {
                    b.Property<int>("TrenerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TrenerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<int?>("BrojOcjena");

                    b.Property<DateTime?>("DatumZaposlenja")
                        .HasColumnType("date");

                    b.Property<int?>("GradId")
                        .HasColumnName("GradID");

                    b.Property<string>("Ime");

                    b.Property<string>("Jmbg")
                        .HasColumnName("JMBG")
                        .HasMaxLength(13);

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("LozinkaHash");

                    b.Property<string>("LozinkaSalt");

                    b.Property<string>("Mail")
                        .HasMaxLength(100);

                    b.Property<string>("Opis");

                    b.Property<string>("Prezime");

                    b.Property<byte[]>("Slika");

                    b.Property<string>("Spol");

                    b.Property<string>("Telefon")
                        .HasMaxLength(12);

                    b.Property<string>("Uloga");

                    b.HasKey("TrenerId");

                    b.HasIndex("GradId");

                    b.ToTable("Trener");

                    b.HasData(
                        new
                        {
                            TrenerId = 1,
                            Adresa = "Olovska 105",
                            DatumZaposlenja = new DateTime(2020, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradId = 2,
                            Ime = "Dwayne",
                            Jmbg = "1112223334441",
                            KorisnickoIme = "therock",
                            LozinkaHash = "Hu3I566U63IfB7wpBIWSgPvrocA=",
                            LozinkaSalt = "aRfWAJofJsXOrAqdy5J3Eg==",
                            Mail = "dwayne@gmail.com",
                            Opis = "Professional fitness trainer",
                            Prezime = "Johnson",
                            Spol = "M",
                            Telefon = "061724122"
                        },
                        new
                        {
                            TrenerId = 2,
                            Adresa = "Olovska 106",
                            DatumZaposlenja = new DateTime(2020, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradId = 2,
                            Ime = "Arnold",
                            Jmbg = "1112223334442",
                            KorisnickoIme = "arnie",
                            LozinkaHash = "29Fh/de/6g6xOFFl3NLxDuUSKYM=",
                            LozinkaSalt = "a7kYMehoouvW29lxo6KIoA==",
                            Mail = "arnold@gmail.com",
                            Opis = "Professional fitness trainer",
                            Prezime = "Schwarzeneger",
                            Spol = "M",
                            Telefon = "061724552"
                        },
                        new
                        {
                            TrenerId = 3,
                            Adresa = "Olovska 107",
                            DatumZaposlenja = new DateTime(2020, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradId = 2,
                            Ime = "Gal",
                            Jmbg = "1112223334222",
                            KorisnickoIme = "gal123",
                            LozinkaHash = "0fWcLjR5shgqfj52FNLZqrZuqHE=",
                            LozinkaSalt = "+itG6dytdkHc0I9sXnk2ag==",
                            Mail = "gal@gmail.com",
                            Opis = "Professional fitness trainer",
                            Prezime = "Gadot",
                            Spol = "Ž",
                            Telefon = "061724332"
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Trening", b =>
                {
                    b.Property<int>("TreningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TreningID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Cijena");

                    b.Property<int>("Kapacitet");

                    b.Property<string>("Naziv");

                    b.Property<string>("Opis");

                    b.Property<string>("Preduvjeti");

                    b.Property<DateTime?>("TerminOdrzavanja")
                        .HasColumnName("TerminOdrzavanja");

                    b.Property<string>("Tezina")
                        .HasMaxLength(50);

                    b.Property<int?>("TrenerId")
                        .HasColumnName("TrenerID");

                    b.Property<int?>("VrstaTreningaId")
                        .HasColumnName("VrstaTreningaID");

                    b.HasKey("TreningId");

                    b.HasIndex("TrenerId");

                    b.HasIndex("VrstaTreningaId");

                    b.ToTable("Trening");

                    b.HasData(
                        new
                        {
                            TreningId = 1,
                            Cijena = 500.0,
                            Kapacitet = 30,
                            Naziv = "Weightlifting 101",
                            Opis = "Weight lifting intermediate",
                            Preduvjeti = "Intro to weightlifting",
                            TerminOdrzavanja = new DateTime(2020, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tezina = "Intermediate",
                            TrenerId = 1,
                            VrstaTreningaId = 1
                        },
                        new
                        {
                            TreningId = 2,
                            Cijena = 1000.0,
                            Kapacitet = 15,
                            Naziv = "Pro weightlifting",
                            Opis = "Competitive weightlifting course",
                            Preduvjeti = "Weightlifting intermediate",
                            TerminOdrzavanja = new DateTime(2020, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tezina = "Advanced",
                            TrenerId = 2,
                            VrstaTreningaId = 1
                        },
                        new
                        {
                            TreningId = 3,
                            Cijena = 150.0,
                            Kapacitet = 20,
                            Naziv = "Fitness training",
                            Opis = "Fitness training intermediate",
                            Preduvjeti = "Fitness for beginners",
                            TerminOdrzavanja = new DateTime(2020, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tezina = "Intermediate",
                            TrenerId = 3,
                            VrstaTreningaId = 3
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasMaxLength(200);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Uplata", b =>
                {
                    b.Property<int>("UplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UplataID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdministracijaId")
                        .HasColumnName("AdministracijaID");

                    b.Property<DateTime?>("DatumUplate")
                        .HasColumnType("date");

                    b.Property<double?>("Iznos");

                    b.Property<int?>("PolaznikId")
                        .HasColumnName("PolaznikID");

                    b.Property<int?>("SubskripcijaId")
                        .HasColumnName("SubskripcijaID");

                    b.Property<string>("Svrha");

                    b.HasKey("UplataId");

                    b.HasIndex("AdministracijaId");

                    b.HasIndex("PolaznikId");

                    b.HasIndex("SubskripcijaId");

                    b.ToTable("Uplata");

                    b.HasData(
                        new
                        {
                            UplataId = 1,
                            AdministracijaId = 1,
                            DatumUplate = new DateTime(2020, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Iznos = 200.0,
                            PolaznikId = 1,
                            SubskripcijaId = 1,
                            Svrha = "Uplata za trening"
                        },
                        new
                        {
                            UplataId = 2,
                            AdministracijaId = 1,
                            DatumUplate = new DateTime(2020, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Iznos = 50.0,
                            PolaznikId = 2,
                            SubskripcijaId = 1,
                            Svrha = "Uplata za koristenje svlacionice"
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.VrstaSubskripcije", b =>
                {
                    b.Property<int>("VrstaSubskripcijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VrstaSubskripcijeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalji");

                    b.Property<string>("Vrsta");

                    b.HasKey("VrstaSubskripcijeId");

                    b.ToTable("VrstaSubskripcije");

                    b.HasData(
                        new
                        {
                            VrstaSubskripcijeId = 1,
                            Detalji = "Monthly subscription package",
                            Vrsta = "Mjesecna"
                        },
                        new
                        {
                            VrstaSubskripcijeId = 2,
                            Detalji = "Yearly subscription package",
                            Vrsta = "Godisnja"
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.VrstaTreninga", b =>
                {
                    b.Property<int>("VrstaTreningaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VrstaTreningaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.Property<string>("Tezina");

                    b.Property<string>("Vrsta");

                    b.HasKey("VrstaTreningaId");

                    b.ToTable("VrstaTreninga");

                    b.HasData(
                        new
                        {
                            VrstaTreningaId = 1,
                            Naziv = "Weightlifting",
                            Tezina = "Srednja",
                            Vrsta = "Strength training"
                        },
                        new
                        {
                            VrstaTreningaId = 2,
                            Naziv = "Yoga",
                            Tezina = "Mala",
                            Vrsta = "Cardio training"
                        },
                        new
                        {
                            VrstaTreningaId = 3,
                            Naziv = "Fitness",
                            Tezina = "Srednja",
                            Vrsta = "Fitness training"
                        });
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Administracija", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Grad", "Grad")
                        .WithMany("Administracija")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK__Administr__GradI__1367E606");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Administracija", "Administracija")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("AdministracijaID")
                        .HasConstraintName("AdministracijaID_FK");

                    b.HasOne("GymManager3.WebAPI.Database.Polaznik", "Polaznik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("PolaznikID")
                        .HasConstraintName("PolaznikID_FK");

                    b.HasOne("GymManager3.WebAPI.Database.Trener", "Trener")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("TrenerID")
                        .HasConstraintName("TrenerID_FK");

                    b.HasOne("GymManager3.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaID")
                        .HasConstraintName("UlogaID_FK");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Ocjene", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Polaznik", "Polaznik")
                        .WithMany("Ocjene")
                        .HasForeignKey("PolaznikID")
                        .HasConstraintName("PolaznikID_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GymManager3.WebAPI.Database.Trener", "Trener")
                        .WithMany("Ocjene")
                        .HasForeignKey("TrenerID")
                        .HasConstraintName("TrenerID_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Pohadja", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Polaznik", "Polaznik")
                        .WithMany("Pohadja")
                        .HasForeignKey("PolaznikId")
                        .HasConstraintName("FK__Pohadja__Polazni__267ABA7A");

                    b.HasOne("GymManager3.WebAPI.Database.Termin", "Termin")
                        .WithMany("Pohadja")
                        .HasForeignKey("TerminId")
                        .HasConstraintName("FK__Pohadja__TerminI__286302EC");

                    b.HasOne("GymManager3.WebAPI.Database.Trening", "Trening")
                        .WithMany("Pohadja")
                        .HasForeignKey("TreningId")
                        .HasConstraintName("FK__Pohadja__Trening__276EDEB3");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Polaznik", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Grad", "Grad")
                        .WithMany("Polaznik")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK__Polaznik__GradID__1B0907CE");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.RezervacijaTrenera", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Polaznik", "Polaznik")
                        .WithMany("RezervacijaTrenera")
                        .HasForeignKey("PolaznikID")
                        .HasConstraintName("PolaznikID_FK");

                    b.HasOne("GymManager3.WebAPI.Database.Trener", "Trener")
                        .WithMany("RezervacijaTrenera")
                        .HasForeignKey("TrenerID")
                        .HasConstraintName("TrenerID_FK");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.RezervacijaTreninga", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Polaznik", "Polaznik")
                        .WithMany("RezervacijaTreninga")
                        .HasForeignKey("PolaznikID")
                        .HasConstraintName("PolaznikID_FK");

                    b.HasOne("GymManager3.WebAPI.Database.Trening", "Trening")
                        .WithMany("RezervacijaTreninga")
                        .HasForeignKey("TreningID")
                        .HasConstraintName("TreningID_FK");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Subskripcija", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Trening", "Trening")
                        .WithMany("Subskripcija")
                        .HasForeignKey("TreningId")
                        .HasConstraintName("FK__Subskripc__Treni__2B3F6F97");

                    b.HasOne("GymManager3.WebAPI.Database.VrstaSubskripcije", "VrstaSubskripcije")
                        .WithMany("Subskripcija")
                        .HasForeignKey("VrstaSubskripcijeId")
                        .HasConstraintName("FK__Subskripc__Vrsta__2C3393D0");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Termin", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Trener", "Trener")
                        .WithMany()
                        .HasForeignKey("TrenerId");

                    b.HasOne("GymManager3.WebAPI.Database.Trening", "Trening")
                        .WithMany()
                        .HasForeignKey("TreningId");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Trener", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Grad", "Grad")
                        .WithMany("Trener")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK__Trener__GradID__1DE57479");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Trening", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Trener", "Trener")
                        .WithMany("Trening")
                        .HasForeignKey("TrenerId")
                        .HasConstraintName("FK__Trening__TrenerI__22AA2996");

                    b.HasOne("GymManager3.WebAPI.Database.VrstaTreninga", "VrstaTreninga")
                        .WithMany("Trening")
                        .HasForeignKey("VrstaTreningaId")
                        .HasConstraintName("FK__Trening__VrstaTr__239E4DCF");
                });

            modelBuilder.Entity("GymManager3.WebAPI.Database.Uplata", b =>
                {
                    b.HasOne("GymManager3.WebAPI.Database.Administracija", "Administracija")
                        .WithMany("Uplata")
                        .HasForeignKey("AdministracijaId")
                        .HasConstraintName("FK__Uplata__Administ__2F10007B");

                    b.HasOne("GymManager3.WebAPI.Database.Polaznik", "Polaznik")
                        .WithMany("Uplata")
                        .HasForeignKey("PolaznikId")
                        .HasConstraintName("FK__Uplata__Polaznik__300424B4");

                    b.HasOne("GymManager3.WebAPI.Database.Subskripcija", "Subskripcija")
                        .WithMany("Uplata")
                        .HasForeignKey("SubskripcijaId")
                        .HasConstraintName("FK__Uplata__Subskrip__30F848ED");
                });
#pragma warning restore 612, 618
        }
    }
}
